# =============================================================================
# OBP Keycloak Provider - Environment Configuration
# =============================================================================
# Copy this file to .env and update with your actual configuration values
#
# IMPORTANT: Never commit the .env file to version control as it contains
# sensitive information like passwords and secrets.
#
# Usage:
#   1. Copy this file: cp .env.example .env
#   2. Edit .env with your actual values
#   3. Run: ./sh/run-with-env.sh
#
# =============================================================================

# -----------------------------------------------------------------------------
# KEYCLOAK CONFIGURATION
# -----------------------------------------------------------------------------

# Enable health check endpoints (true/false)
# Used for monitoring and load balancer health checks
KC_HEALTH_ENABLED=true

# Enable metrics endpoints (true/false)
# Used for Prometheus/monitoring integration
KC_METRICS_ENABLED=true

# Keycloak features to enable (comma-separated)
# Available features: token-exchange, admin-fine-grained-authz, etc.
KC_FEATURES=token-exchange

# Hostname strict mode (true/false)
# Set to false for development, true for production
KC_HOSTNAME_STRICT=false

# Keycloak log level (TRACE, DEBUG, INFO, WARN, ERROR)
KC_LOG_LEVEL=INFO

# Bootstrap admin credentials (for initial setup)
# These create the initial admin user when Keycloak starts for the first time
KC_BOOTSTRAP_ADMIN_USERNAME=admin
KC_BOOTSTRAP_ADMIN_PASSWORD=admin

# -----------------------------------------------------------------------------
# DATABASE CONFIGURATION
# -----------------------------------------------------------------------------

# PostgreSQL Database URL
# Format: jdbc:postgresql://hostname:port/database_name
# Example: jdbc:postgresql://192.168.1.23:5432/obp_mapped
DB_URL=jdbc:postgresql://192.168.1.23:5432/obp_mapped

# Database Username
# This should be a user with read/write access to the database
DB_USER=obp

# Database Password
# The password for the database user specified above
DB_PASSWORD=f

# Database Driver (usually doesn't need to be changed)
# PostgreSQL JDBC driver class name
DB_DRIVER=org.postgresql.Driver

# Hibernate Dialect (usually doesn't need to be changed)
# Tells Hibernate which SQL dialect to use for PostgreSQL
DB_DIALECT=org.hibernate.dialect.PostgreSQLDialect

# -----------------------------------------------------------------------------
# HIBERNATE ORM CONFIGURATION
# -----------------------------------------------------------------------------

# Hibernate DDL Auto mode
# Options:
#   - validate: Validate schema against entities (recommended for production)
#   - update: Update schema if needed (good for development)
#   - create: Create schema on startup (destroys existing data)
#   - create-drop: Create schema on startup, drop on shutdown
#   - none: No automatic schema management
HIBERNATE_DDL_AUTO=validate

# Show SQL queries in logs (true/false)
# Set to true for debugging, false for production performance
HIBERNATE_SHOW_SQL=true

# Format SQL queries in logs (true/false)
# Makes SQL queries more readable in logs
HIBERNATE_FORMAT_SQL=true

# -----------------------------------------------------------------------------
# LOGGING CONFIGURATION
# -----------------------------------------------------------------------------

# Application log level for custom provider (TRACE, DEBUG, INFO, WARN, ERROR)
# Controls logging for io.tesobe package
LOG_LEVEL=INFO

# -----------------------------------------------------------------------------
# SECURITY NOTES
# -----------------------------------------------------------------------------
#
# 1. Database Credentials:
#    - Use strong passwords in production
#    - Consider using database connection pooling
#    - Ensure database server has proper firewall rules
#
# 2. Admin Credentials:
#    - Change default admin credentials immediately after first login
#    - Use strong passwords for admin accounts
#    - Consider enabling two-factor authentication
#
# 3. Network Security:
#    - Use HTTPS in production (configure proper SSL certificates)
#    - Restrict network access to Keycloak and database
#    - Use private networks where possible
#
# 4. Environment Variables:
#    - Never commit .env file to version control
#    - Use secrets management in production (Kubernetes secrets, etc.)
#    - Rotate credentials regularly
#
# -----------------------------------------------------------------------------
# PRODUCTION CONSIDERATIONS
# -----------------------------------------------------------------------------
#
# For production deployments, consider:
#
# 1. Database:
#    - Use connection pooling (configure in Keycloak)
#    - Enable SSL for database connections
#    - Use read replicas if needed
#    - Regular backups and monitoring
#
# 2. Keycloak:
#    - Set KC_HOSTNAME_STRICT=true
#    - Configure proper SSL certificates
#    - Set KC_LOG_LEVEL=WARN or ERROR
#    - Set HIBERNATE_SHOW_SQL=false
#    - Configure clustering if using multiple instances
#
# 3. Monitoring:
#    - Enable metrics (KC_METRICS_ENABLED=true)
#    - Set up proper monitoring and alerting
#    - Monitor database performance
#
# -----------------------------------------------------------------------------
# TROUBLESHOOTING
# -----------------------------------------------------------------------------
#
# Common issues and solutions:
#
# 1. Database Connection Errors:
#    - Verify DB_URL format and accessibility
#    - Check database credentials (DB_USER/DB_PASSWORD)
#    - Ensure PostgreSQL driver is available
#    - Check network connectivity between Keycloak and database
#
# 2. Schema Validation Errors:
#    - Set HIBERNATE_DDL_AUTO=update for development
#    - Ensure database schema matches entity definitions
#    - Check database user permissions
#
# 3. Performance Issues:
#    - Set HIBERNATE_SHOW_SQL=false in production
#    - Configure proper connection pooling
#    - Monitor database performance
#
# 4. Authentication Issues:
#    - Verify admin credentials are correct
#    - Check Keycloak logs for detailed error messages
#    - Ensure proper realm configuration
#
# =============================================================================
